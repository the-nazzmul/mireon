// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id             String          @id @default(cuid())
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    imageUrl       String?
    firstName      String?
    lastName       String?
    emailAddress   String          @unique
    credits        Int             @default(500)
    userToProject  UserToProject[]
    questionsAsked Question[]
}

model Project {
    id                  String                @id @default(cuid())
    createdAt           DateTime              @default(now())
    updatedAt           DateTime              @updatedAt
    name                String
    githubUrl           String
    deletedAt           DateTime?
    userToProject       UserToProject[]
    commits             Commit[]
    sourceCodeEmbedding SourceCodeEmbedding[]
    savedQuestions      Question[]
}

model UserToProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String
    projectId String
    user      User     @relation(fields: [userId], references: [id])
    project   Project  @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}

model Question {
    id             String   @id @default(cuid())
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
    question       String
    answer         String
    filesReference Json?

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    userId String
    user   User   @relation(fields: [userId], references: [id])
}

model Commit {
    id                 String   @id @default(cuid())
    createdAt          DateTime @default(now())
    updatedAt          DateTime @updatedAt
    commitMessage      String
    commitHash         String
    comitAuthorName    String
    commitAuthorAvatar String
    commitDate         DateTime
    summary            String
    projectId          String
    project            Project  @relation(fields: [projectId], references: [id])
}
